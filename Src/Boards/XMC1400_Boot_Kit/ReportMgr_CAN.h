/*******************************************************************************
// Report Manager CAN Commands (Autogenerated)
*******************************************************************************/
#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>

// NOTE: The macros and structures below are autogenerated

// INV_CommandCMD CAN Message Length
#define INV_CommandCMD_DLC (4U)
// INV_CommandCMD CAN Message (5377)
#define INV_CommandCMD_CANID (0xA101U)
// INV_CommandCMD CAN Message (5377)
typedef struct
{
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_StateReq;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_ResetReq;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_RapidShutdown;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_L1L2InPhaseReq;
} INV_CommandCMD_t;

// INV_L2NStatusRSP CAN Message Length
#define INV_L2NStatusRSP_DLC (8U)
// INV_L2NStatusRSP CAN Message (70657)
#define INV_L2NStatusRSP_CANID (0x1A001U)
// signal: @L1NVoltageVrms
#define INV_L2NStatusRSP_L1NVoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L1NVoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L1NVoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L2NVoltageVrms
#define INV_L2NStatusRSP_L2NVoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L2NVoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L2NVoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L1NCurrentArms
#define INV_L2NStatusRSP_L1NCurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L1NCurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L1NCurrentArms_fromS(x) ((x) * 0.005)

// signal: @L2NCurrentArms
#define INV_L2NStatusRSP_L2NCurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L2NCurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L2NCurrentArms_fromS(x) ((x) * 0.005)

// INV_L2NStatusRSP CAN Message (70657)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L1NVoltageVrms;
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L2NVoltageVrms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L1NCurrentArms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L2NCurrentArms;
} INV_L2NStatusRSP_t;

// INV_L2LStatusRSP CAN Message Length
#define INV_L2LStatusRSP_DLC (4U)
// INV_L2LStatusRSP CAN Message (70658)
#define INV_L2LStatusRSP_CANID (0x1A002U)
// signal: @L1L2VoltageVrms
#define INV_L2LStatusRSP_L1L2VoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2LStatusRSP_L1L2VoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2LStatusRSP_L1L2VoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L1L2CurrentArms
#define INV_L2LStatusRSP_L1L2CurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2LStatusRSP_L1L2CurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2LStatusRSP_L1L2CurrentArms_fromS(x) ((x) * 0.005)
// INV_L2LStatusRSP CAN Message (70658)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L1L2VoltageVrms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L1L2CurrentArms;
} INV_L2LStatusRSP_t;

// INV_DCBusStatusRSP CAN Message Length
#define INV_DCBusStatusRSP_DLC (8U)
// INV_DCBusStatusRSP CAN Message (70659)
#define INV_DCBusStatusRSP_CANID (0x1A003U)
// signal: @PosBusVoltage
#define INV_DCBusStatusRSP_PosBusVoltage_CovFactor (0.01)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_PosBusVoltage_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_PosBusVoltage_fromS(x) ((x) * 0.01)

// signal: @NegBusVoltage
#define INV_DCBusStatusRSP_NegBusVoltage_CovFactor (0.01)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_NegBusVoltage_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_NegBusVoltage_fromS(x) ((x) * 0.01)

// signal: @PosBusCurrent
#define INV_DCBusStatusRSP_PosBusCurrent_CovFactor (0.005)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_PosBusCurrent_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_PosBusCurrent_fromS(x) ((x) * 0.005)

// signal: @NegBusCurrent
#define INV_DCBusStatusRSP_NegBusCurrent_CovFactor (0.005)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_NegBusCurrent_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_NegBusCurrent_fromS(x) ((x) * 0.005)

// INV_DCBusStatusRSP CAN Message (70659)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t PosBusVoltage;
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t NegBusVoltage;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t PosBusCurrent;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t NegBusCurrent;
} INV_DCBusStatusRSP_t;

// INV_TemperaturesRSP CAN Message Length
#define INV_TemperaturesRSP_DLC (8U)
// INV_TemperaturesRSP CAN Message (70660)
#define INV_TemperaturesRSP_CANID (0x1A004U)
// signal: @InvHeatsinkC
#define INV_TemperaturesRSP_InvHeatsinkC_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvHeatsinkC_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvHeatsinkC_fromS(x) ((x))

// signal: @InvPowerStage1C
#define INV_TemperaturesRSP_InvPowerStage1C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage1C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage1C_fromS(x) ((x))

// signal: @InvPowerStage2C
#define INV_TemperaturesRSP_InvPowerStage2C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage2C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage2C_fromS(x) ((x))

// signal: @InvPowerStage3C
#define INV_TemperaturesRSP_InvPowerStage3C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage3C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage3C_fromS(x) ((x))

// signal: @InvFanDutyCycle1
#define INV_TemperaturesRSP_InvFanDutyCycle1_CovFactor (0.1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle1_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle1_fromS(x) ((x) * 0.1)

// signal: @InvFanDutyCycle2
#define INV_TemperaturesRSP_InvFanDutyCycle2_CovFactor (0.1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle2_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle2_fromS(x) ((x) * 0.1)
// INV_TemperaturesRSP CAN Message (70660)
typedef struct
{
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvHeatsinkC;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage1C;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage2C;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage3C;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t InvFanDutyCycle1;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t InvFanDutyCycle2;
} INV_TemperaturesRSP_t;

// INV_StateRSP CAN Message Length
#define INV_StateRSP_DLC (3U)
// INV_StateRSP CAN Message (70661)
#define INV_StateRSP_CANID (0x1A005U)
// INV_StateRSP CAN Message (70661)
typedef struct
{
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t InvState;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t InvACRelay;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_L1L2InPhase;
} INV_StateRSP_t;

// BB_CommandCMD Message Length
#define BB_CommandCMD_DLC (2U)
// BB_CommandCMD CAN Message (2817)
#define BB_CommandCMD_CANID (0xB101U)
// BB_CommandCMD CAN Message (2817)
typedef struct
{
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t BB_StateReq;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t BB_ResetReq;
} BB_CommandCMD_t;

// BB_BatteryStatusRSP Message Length
#define BB_BatteryStatusRSP_DLC (8U)
// BB_BatteryStatusRSP CAN Message (68097)
#define BB_BatteryStatusRSP_CANID (0x1B001U)
// signal: @BatteryVoltageV
#define BB_BatteryStatusRSP_BatteryVoltageV_CovFactor (0.001)
// conversion value to CAN signal
#define BB_BatteryStatusRSP_BatteryVoltageV_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_BatteryStatusRSP_BatteryVoltageV_fromS(x) ((x) * 0.001)

// signal: @BatteryCurrentA
#define BB_BatteryStatusRSP_BatteryCurrentA_CovFactor (0.005)
// conversion value to CAN signal
#define BB_BatteryStatusRSP_BatteryCurrentA_toS(x) ((int16_t)((x) / 0.005))
// conversion value from CAN signal
#define BB_BatteryStatusRSP_BatteryCurrentA_fromS(x) ((x) * 0.005)

// signal: @BatterySOC
#define BB_BatteryStatusRSP_BatterySOC_CovFactor (0.1)
// conversion value to CAN signal
#define BB_BatteryStatusRSP_BatterySOC_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define BB_BatteryStatusRSP_BatterySOC_fromS(x) ((x) * 0.1)

// BB_BatteryStatusRSP CAN Message (68097)
typedef struct
{
   //      Bits=16.  [ 0     , 255    ]  Unit:''
   uint16_t BatteryBlockState;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t BatteryVoltageV;
   //  [-] Bits=16.  [ -163.84, 163.835 ]  Unit:''      Factor= 0.005
   int16_t BatteryCurrentA;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t BatterySOC;
} BB_BatteryStatusRSP_t;

// BB_DCDCStatusRSP Message Length
#define BB_DCDCStatusRSP_DLC (4U)
// BB_DCDCStatusRSP CAN Message (68098)
#define BB_DCDCStatusRSP_CANID (0x1B002U)
// signal: @DCBusVoltageV
#define BB_DCDCStatusRSP_DCBusVoltageV_CovFactor (0.01)
// conversion value to CAN signal
#define BB_DCDCStatusRSP_DCBusVoltageV_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define BB_DCDCStatusRSP_DCBusVoltageV_fromS(x) ((x) * 0.01)

// signal: @DCBusCurrentA
#define BB_DCDCStatusRSP_DCBusCurrentA_CovFactor (0.005)
// conversion value to CAN signal
#define BB_DCDCStatusRSP_DCBusCurrentA_toS(x) ((int16_t)((x) / 0.005))
// conversion value from CAN signal
#define BB_DCDCStatusRSP_DCBusCurrentA_fromS(x) ((x) * 0.005)

// BB_DCDCStatusRSP CAN Message (68098)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t DCBusVoltageV;
   //  [-] Bits=16.  [ -163.84, 163.835 ]  Unit:''      Factor= 0.005
   int16_t DCBusCurrentA;
} BB_DCDCStatusRSP_t;

// BB_CellVoltage1to4RSP Message Length
#define BB_CellVoltage1to4RSP_DLC (8U)
// BB_CellVoltage1to4RSP CAN Message (68099)
#define BB_CellVoltage1to4RSP_CANID (0x1B003U)
// signal: @Cell1V
#define BB_CellVoltage1to4RSP_Cell1V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage1to4RSP_Cell1V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage1to4RSP_Cell1V_fromS(x) ((x) * 0.001)

// signal: @Cell2V
#define BB_CellVoltage1to4RSP_Cell2V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage1to4RSP_Cell2V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage1to4RSP_Cell2V_fromS(x) ((x) * 0.001)

// signal: @Cell3V
#define BB_CellVoltage1to4RSP_Cell3V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage1to4RSP_Cell3V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage1to4RSP_Cell3V_fromS(x) ((x) * 0.001)

// signal: @Cell4V
#define BB_CellVoltage1to4RSP_Cell4V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage1to4RSP_Cell4V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage1to4RSP_Cell4V_fromS(x) ((x) * 0.001)

// BB_CellVoltage1to4RSP CAN Message (68099)
typedef struct
{
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell1V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell2V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell3V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell4V;
} BB_CellVoltage1to4RSP_t;



// BB_CellVoltage5to8RSP Message Length
#define BB_CellVoltage5to8RSP_DLC (8U)
// BB_CellVoltage5to8RSP CAN Message (68100)
#define BB_CellVoltage5to8RSP_CANID (0x1B004U)
// signal: @Cell5V
#define BB_CellVoltage5to8RSP_Cell5V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage5to8RSP_Cell5V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage5to8RSP_Cell5V_fromS(x) ((x) * 0.001)

// signal: @Cell6V
#define BB_CellVoltage5to8RSP_Cell6V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage5to8RSP_Cell6V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage5to8RSP_Cell6V_fromS(x) ((x) * 0.001)

// signal: @Cell7V
#define BB_CellVoltage5to8RSP_Cell7V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage5to8RSP_Cell7V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage5to8RSP_Cell7V_fromS(x) ((x) * 0.001)

// signal: @Cell8V
#define BB_CellVoltage5to8RSP_Cell8V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage5to8RSP_Cell8V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage5to8RSP_Cell8V_fromS(x) ((x) * 0.001)

// BB_CellVoltage5to8RSP CAN Message (68100)
typedef struct
{
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell5V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell6V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell7V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell8V;
} BB_CellVoltage5to8RSP_t;



// BB_CellVoltage9to12RSP Message Length
#define BB_CellVoltage9to12RSP_DLC (8U)
// BB_CellVoltage9to12RSP CAN Message (68101)
#define BB_CellVoltage9to12RSP_CANID (0x1B005U)
// signal: @Cell9V
#define BB_CellVoltage9to12RSP_Cell9V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage9to12RSP_Cell9V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage9to12RSP_Cell9V_fromS(x) ((x) * 0.001)

// signal: @Cell10V
#define BB_CellVoltage9to12RSP_Cell10V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage9to12RSP_Cell10V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage9to12RSP_Cell10V_fromS(x) ((x) * 0.001)

// signal: @Cell11V
#define BB_CellVoltage9to12RSP_Cell11V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage9to12RSP_Cell11V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage9to12RSP_Cell11V_fromS(x) ((x) * 0.001)

// signal: @Cell12V
#define BB_CellVoltage9to12RSP_Cell12V_CovFactor (0.001)
// conversion value to CAN signal
#define BB_CellVoltage9to12RSP_Cell12V_toS(x) ((uint16_t)((x) / 0.001))
// conversion value from CAN signal
#define BB_CellVoltage9to12RSP_Cell12V_fromS(x) ((x) * 0.001)

// BB_CellVoltage9to12RSP CAN Message (68101)
typedef struct
{
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell9V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell10V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell11V;
   //      Bits=16.  [ 0     , 65.535 ]  Unit:''      Factor= 0.001
   uint16_t Cell12V;
} BB_CellVoltage9to12RSP_t;

// BB_CellTempRSP Message Length
#define BB_CellTempRSP_DLC (6U)
// BB_CellTempRSP CAN Message (68102)
#define BB_CellTempRSP_CANID (0x1B006U)
// signal: @Submodule1C
#define BB_CellTempRSP_Submodule1C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule1C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule1C_fromS(x) ((x) * 0.5)

// signal: @Submodule2C
#define BB_CellTempRSP_Submodule2C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule2C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule2C_fromS(x) ((x) * 0.5)

// signal: @Submodule3C
#define BB_CellTempRSP_Submodule3C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule3C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule3C_fromS(x) ((x) * 0.5)

// signal: @Submodule4C
#define BB_CellTempRSP_Submodule4C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule4C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule4C_fromS(x) ((x) * 0.5)

// signal: @Submodule5C
#define BB_CellTempRSP_Submodule5C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule5C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule5C_fromS(x) ((x) * 0.5)

// signal: @Submodule6C
#define BB_CellTempRSP_Submodule6C_CovFactor (0.5)
// conversion value to CAN signal
#define BB_CellTempRSP_Submodule6C_toS(x) ((int16_t)((x) / 0.5 + 80))
// conversion value from CAN signal
#define BB_CellTempRSP_Submodule6C_fromS(x) ((x) * 0.5)

// BB_CellTempRSP CAN Message (68102)
typedef struct
{

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule1C;

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule2C;

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule3C;

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule4C;

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule5C;

   // EJH: Corrected autogenerated code to 8-bit
   //      Bits=08.  [ -40   , 87.5   ]  Unit:''      Offset= -40       Factor= 0.5
   uint8_t Submodule6C;
} BB_CellTempRSP_t;

// BB_DCDCTemperaturesRSP Message Length
#define BB_DCDCTemperaturesRSP_DLC (4U)
// BB_DCDCTemperaturesRSP CAN Message (68103)
#define BB_DCDCTemperaturesRSP_CANID (0x1B007U)
// signal: @BBHeatsinkC
#define BB_DCDCTemperaturesRSP_BBHeatsinkC_CovFactor (1)
// conversion value to CAN signal
#define BB_DCDCTemperaturesRSP_BBHeatsinkC_toS(x) ((int32_t)((x) + 60))
// conversion value from CAN signal
#define BB_DCDCTemperaturesRSP_BBHeatsinkC_fromS(x) ((x))

// signal: @FanDutyCycle
#define BB_DCDCTemperaturesRSP_FanDutyCycle_CovFactor (0.1)
// conversion value to CAN signal
#define BB_DCDCTemperaturesRSP_FanDutyCycle_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define BB_DCDCTemperaturesRSP_FanDutyCycle_fromS(x) ((x) * 0.1)

// BB_DCDCTemperaturesRSP CAN Message (68103)
typedef struct
{

   // EJH: Corrected autogenerated code to 16-bit
   //      Bits=16.  [ -60   , 195    ]  Unit:''      Offset= -60
   int16_t BBHeatsinkC;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t FanDutyCycle;
} BB_DCDCTemperaturesRSP_t;

#ifdef __cplusplus
}
#endif

