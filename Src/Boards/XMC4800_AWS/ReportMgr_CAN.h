/*******************************************************************************
// Report Manager CAN Commands (Autogenerated)
*******************************************************************************/
#pragma once

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>

// NOTE: The macros and structures below are autogenerated

// INV_CommandCMD CAN Message Length
#define INV_CommandCMD_DLC (4U)
// INV_CommandCMD CAN Message (5377)
#define INV_CommandCMD_CANID (0x1501U)
// INV_CommandCMD CAN Message (5377)
typedef struct
{
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_StateReq;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_ResetReq;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_RapidShutdown;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_L1L2InPhaseReq;
} INV_CommandCMD_t;

// INV_L2NStatusRSP CAN Message Length
#define INV_L2NStatusRSP_DLC (8U)
// INV_L2NStatusRSP CAN Message (70657)
#define INV_L2NStatusRSP_CANID (0x11401U)
// signal: @L1NVoltageVrms
#define INV_L2NStatusRSP_L1NVoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L1NVoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L1NVoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L2NVoltageVrms
#define INV_L2NStatusRSP_L2NVoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L2NVoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L2NVoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L1NCurrentArms
#define INV_L2NStatusRSP_L1NCurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L1NCurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L1NCurrentArms_fromS(x) ((x) * 0.005)

// signal: @L2NCurrentArms
#define INV_L2NStatusRSP_L2NCurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2NStatusRSP_L2NCurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2NStatusRSP_L2NCurrentArms_fromS(x) ((x) * 0.005)

// INV_L2NStatusRSP CAN Message (70657)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L1NVoltageVrms;
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L2NVoltageVrms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L1NCurrentArms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L2NCurrentArms;
} INV_L2NStatusRSP_t;

// INV_L2LStatusRSP CAN Message Length
#define INV_L2LStatusRSP_DLC (4U)
// INV_L2LStatusRSP CAN Message (70658)
#define INV_L2LStatusRSP_CANID (0x11402U)
// signal: @L1L2VoltageVrms
#define INV_L2LStatusRSP_L1L2VoltageVrms_CovFactor (0.01)
// conversion value to CAN signal
#define INV_L2LStatusRSP_L1L2VoltageVrms_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_L2LStatusRSP_L1L2VoltageVrms_fromS(x) ((x) * 0.01)

// signal: @L1L2CurrentArms
#define INV_L2LStatusRSP_L1L2CurrentArms_CovFactor (0.005)
// conversion value to CAN signal
#define INV_L2LStatusRSP_L1L2CurrentArms_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_L2LStatusRSP_L1L2CurrentArms_fromS(x) ((x) * 0.005)
// INV_L2LStatusRSP CAN Message (70658)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t L1L2VoltageVrms;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t L1L2CurrentArms;
} INV_L2LStatusRSP_t;

// INV_DCBusStatusRSP CAN Message Length
#define INV_DCBusStatusRSP_DLC (8U)
// INV_DCBusStatusRSP CAN Message (70659)
#define INV_DCBusStatusRSP_CANID (0x11403U)
// signal: @PosBusVoltage
#define INV_DCBusStatusRSP_PosBusVoltage_CovFactor (0.01)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_PosBusVoltage_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_PosBusVoltage_fromS(x) ((x) * 0.01)

// signal: @NegBusVoltage
#define INV_DCBusStatusRSP_NegBusVoltage_CovFactor (0.01)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_NegBusVoltage_toS(x) ((uint16_t)((x) / 0.01))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_NegBusVoltage_fromS(x) ((x) * 0.01)

// signal: @PosBusCurrent
#define INV_DCBusStatusRSP_PosBusCurrent_CovFactor (0.005)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_PosBusCurrent_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_PosBusCurrent_fromS(x) ((x) * 0.005)

// signal: @NegBusCurrent
#define INV_DCBusStatusRSP_NegBusCurrent_CovFactor (0.005)
// conversion value to CAN signal
#define INV_DCBusStatusRSP_NegBusCurrent_toS(x) ((uint16_t)((x) / 0.005))
// conversion value from CAN signal
#define INV_DCBusStatusRSP_NegBusCurrent_fromS(x) ((x) * 0.005)

// INV_DCBusStatusRSP CAN Message (70659)
typedef struct
{
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t PosBusVoltage;
   //      Bits=16.  [ 0     , 655.35 ]  Unit:''      Factor= 0.01
   uint16_t NegBusVoltage;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t PosBusCurrent;
   //      Bits=16.  [ 0     , 327.675 ]  Unit:''      Factor= 0.005
   uint16_t NegBusCurrent;
} INV_DCBusStatusRSP_t;

// INV_TemperaturesRSP CAN Message Length
#define INV_TemperaturesRSP_DLC (8U)
// INV_TemperaturesRSP CAN Message (70660)
#define INV_TemperaturesRSP_CANID (0x11404U)
// signal: @InvHeatsinkC
#define INV_TemperaturesRSP_InvHeatsinkC_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvHeatsinkC_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvHeatsinkC_fromS(x) ((x))

// signal: @InvPowerStage1C
#define INV_TemperaturesRSP_InvPowerStage1C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage1C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage1C_fromS(x) ((x))

// signal: @InvPowerStage2C
#define INV_TemperaturesRSP_InvPowerStage2C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage2C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage2C_fromS(x) ((x))

// signal: @InvPowerStage3C
#define INV_TemperaturesRSP_InvPowerStage3C_CovFactor (1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvPowerStage3C_toS(x) ((int16_t)((x) + 60))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvPowerStage3C_fromS(x) ((x))

// signal: @InvFanDutyCycle1
#define INV_TemperaturesRSP_InvFanDutyCycle1_CovFactor (0.1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle1_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle1_fromS(x) ((x) * 0.1)

// signal: @InvFanDutyCycle2
#define INV_TemperaturesRSP_InvFanDutyCycle2_CovFactor (0.1)
// conversion value to CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle2_toS(x) ((uint16_t)((x) / 0.1))
// conversion value from CAN signal
#define INV_TemperaturesRSP_InvFanDutyCycle2_fromS(x) ((x) * 0.1)
// INV_TemperaturesRSP CAN Message (70660)
typedef struct
{
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvHeatsinkC;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage1C;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage2C;
   //      Bits=08.  [ -60   , 195    ]  Unit:''      Offset= -60
   uint8_t InvPowerStage3C;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t InvFanDutyCycle1;
   //      Bits=16.  [ 0     , 102.3  ]  Unit:''      Factor= 0.1
   uint16_t InvFanDutyCycle2;
} INV_TemperaturesRSP_t;

// INV_StateRSP CAN Message Length
#define INV_StateRSP_DLC (3U)
// INV_StateRSP CAN Message (70661)
#define INV_StateRSP_CANID (0x11405U)
// INV_StateRSP CAN Message (70661)
typedef struct
{
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t InvState;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t InvACRelay;
   //      Bits=08.  [ 0     , 255    ]  Unit:''
   uint8_t INV_L1L2InPhase;
} INV_StateRSP_t;


#ifdef __cplusplus
}
#endif

